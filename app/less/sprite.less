/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/
@s-arrow-menu-ico-name: 's-arrow-menu-ico';
@s-arrow-menu-ico-x: 0px;
@s-arrow-menu-ico-y: 25px;
@s-arrow-menu-ico-offset-x: 0px;
@s-arrow-menu-ico-offset-y: -25px;
@s-arrow-menu-ico-width: 56px;
@s-arrow-menu-ico-height: 10px;
@s-arrow-menu-ico-total-width: 78px;
@s-arrow-menu-ico-total-height: 59px;
@s-arrow-menu-ico-image: 'sprite.png';
@s-arrow-menu-ico: 0px 25px 0px -25px 56px 10px 78px 59px 'sprite.png' 's-arrow-menu-ico';
@s-ball-ico-name: 's-ball-ico';
@s-ball-ico-x: 21px;
@s-ball-ico-y: 35px;
@s-ball-ico-offset-x: -21px;
@s-ball-ico-offset-y: -35px;
@s-ball-ico-width: 18px;
@s-ball-ico-height: 18px;
@s-ball-ico-total-width: 78px;
@s-ball-ico-total-height: 59px;
@s-ball-ico-image: 'sprite.png';
@s-ball-ico: 21px 35px -21px -35px 18px 18px 78px 59px 'sprite.png' 's-ball-ico';
@s-box-icon-name: 's-box-icon';
@s-box-icon-x: 0px;
@s-box-icon-y: 35px;
@s-box-icon-offset-x: 0px;
@s-box-icon-offset-y: -35px;
@s-box-icon-width: 21px;
@s-box-icon-height: 24px;
@s-box-icon-total-width: 78px;
@s-box-icon-total-height: 59px;
@s-box-icon-image: 'sprite.png';
@s-box-icon: 0px 35px 0px -35px 21px 24px 78px 59px 'sprite.png' 's-box-icon';
@s-mastercard-ico-name: 's-mastercard-ico';
@s-mastercard-ico-x: 0px;
@s-mastercard-ico-y: 0px;
@s-mastercard-ico-offset-x: 0px;
@s-mastercard-ico-offset-y: 0px;
@s-mastercard-ico-width: 39px;
@s-mastercard-ico-height: 25px;
@s-mastercard-ico-total-width: 78px;
@s-mastercard-ico-total-height: 59px;
@s-mastercard-ico-image: 'sprite.png';
@s-mastercard-ico: 0px 0px 0px 0px 39px 25px 78px 59px 'sprite.png' 's-mastercard-ico';
@s-phone-ico-name: 's-phone-ico';
@s-phone-ico-x: 39px;
@s-phone-ico-y: 35px;
@s-phone-ico-offset-x: -39px;
@s-phone-ico-offset-y: -35px;
@s-phone-ico-width: 11px;
@s-phone-ico-height: 11px;
@s-phone-ico-total-width: 78px;
@s-phone-ico-total-height: 59px;
@s-phone-ico-image: 'sprite.png';
@s-phone-ico: 39px 35px -39px -35px 11px 11px 78px 59px 'sprite.png' 's-phone-ico';
@s-visa-ico-name: 's-visa-ico';
@s-visa-ico-x: 39px;
@s-visa-ico-y: 0px;
@s-visa-ico-offset-x: -39px;
@s-visa-ico-offset-y: 0px;
@s-visa-ico-width: 39px;
@s-visa-ico-height: 25px;
@s-visa-ico-total-width: 78px;
@s-visa-ico-total-height: 59px;
@s-visa-ico-image: 'sprite.png';
@s-visa-ico: 39px 0px -39px 0px 39px 25px 78px 59px 'sprite.png' 's-visa-ico';
@spritesheet-width: 78px;
@spritesheet-height: 59px;
@spritesheet-image: 'sprite.png';
@spritesheet-sprites: @s-arrow-menu-ico @s-ball-ico @s-box-icon @s-mastercard-ico @s-phone-ico @s-visa-ico;
@spritesheet: 78px 59px 'sprite.png' @spritesheet-sprites;

/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.sprite-width(@sprite) {
  width: extract(@sprite, 5);
}

.sprite-height(@sprite) {
  height: extract(@sprite, 6);
}

.sprite-position(@sprite) {
  @sprite-offset-x: extract(@sprite, 3);
  @sprite-offset-y: extract(@sprite, 4);
  background-position: @sprite-offset-x @sprite-offset-y;
}

.sprite-image(@sprite) {
  @sprite-image: extract(@sprite, 9);
  background-image: e(%('url(../img/sprites/png/sprite.png)', e(@sprite-image)));
}

.sprite(@sprite) {
  .sprite-image(@sprite);
  .sprite-position(@sprite);
  .sprite-width(@sprite);
  .sprite-height(@sprite);
}

/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

.sprites(@spritesheet-sprites);
*/
.sprites(@sprites, @i: 1) when (@i <= length(@sprites)) {
  @sprite: extract(@sprites, @i);
  @sprite-name: e(extract(@sprite, 10));
  .@{sprite-name} {
    .sprite(@sprite);
  }
  .sprites(@sprites, @i + 1);
}
